{"version":3,"sources":["types/FILTER.ts","components/TodoFC/TodoFC.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","components/ErrorBlock/ErrorBlock.tsx","App.tsx","functions/filterTodos.ts","index.tsx"],"names":["FILTER","TodoFC","_ref","todo","setSelectedTodo","setUserId","selectedTodo","id","completed","title","_jsxs","className","children","_jsx","concat","type","onClick","userId","TodoList","todos","map","TodoFilter","filterQuery","setFilterQuery","queryInput","setQueryInput","value","onChange","event","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","ok","json","reject","Error","TodoModal","_useState","useState","_useState2","_slicedToArray","isLoading","setIsloading","_useState3","_useState4","user","selectUser","loadData","useCallback","getUser","userFromServer","finally","useEffect","href","email","name","ErrorBlock","errorMessage","App","setTodos","filteredTodos","setFilteredTodos","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","setErrorMessage","todosJSON","catch","error","message","filterBy","filterByQuery","innerTodos","copyOfTodos","_toConsumableArray","preparedTodos","filter","toLowerCase","includes","filterTodos","_Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23d83518.chunk.js","sourcesContent":["export enum FILTER {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  todo: Todo;\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n  setUserId: React.Dispatch<React.SetStateAction<User['id']>>;\n  selectedTodo: Todo;\n}\n\nexport const TodoFC: React.FC<Props> = ({\n  todo, setSelectedTodo, setUserId, selectedTodo,\n}) => {\n  const {\n    id,\n    completed,\n    title,\n  } = todo;\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">{id}</td>\n      {completed ? (\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n      ) : (\n        <td className=\"is-vcentered\" />\n      )}\n      <td className=\"is-vcentered is-expanded\">\n        <p className={`has-text-${completed ? 'success' : 'danger'}`}>{title}</p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            setSelectedTodo(todo);\n            setUserId(todo.userId);\n          }}\n        >\n          <span className=\"icon\">\n            {\n              selectedTodo?.id === id\n                ? <i className=\"far fa-eye-slash\" />\n                : <i className=\"far fa-eye\" />\n            }\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoFC } from '../TodoFC';\nimport { User } from '../../types/User';\n\ninterface Props {\n  todos: Todo[];\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n  selectedTodo: Todo;\n  setUserId: React.Dispatch<React.SetStateAction<User['id']>>;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos, setSelectedTodo, setUserId, selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        return (\n          <TodoFC\n            key={todo.id}\n            todo={todo}\n            setSelectedTodo={setSelectedTodo}\n            setUserId={setUserId}\n            selectedTodo={selectedTodo}\n          />\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { FILTER } from '../../types/FILTER';\n\ninterface Props {\n  filterQuery: FILTER;\n  setFilterQuery: React.Dispatch<React.SetStateAction<FILTER>>;\n  queryInput: string;\n  setQueryInput: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport const TodoFilter: React.FC<Props>\n= ({\n  filterQuery,\n  setFilterQuery,\n  queryInput,\n  setQueryInput,\n}) => {\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterQuery(event.target.value as FILTER);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQueryInput(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterQuery}\n            onChange={handleSelect}\n          >\n            <option value={FILTER.ALL}>All</option>\n            <option value={FILTER.ACTIVE}>Active</option>\n            <option value={FILTER.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={queryInput}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {queryInput.length !== 0 && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQueryInput('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => {\n      return res.ok ? res.json() : Promise.reject(new Error('Try again later'));\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  selectedTodo: Todo;\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n  userId: User['id'];\n  setUserId: React.Dispatch<React.SetStateAction<number>>;\n}\n\nexport const TodoModal: React.FC<Props>\n= ({\n  selectedTodo,\n  setSelectedTodo,\n  userId,\n  setUserId,\n}) => {\n  const [isLoading, setIsloading] = useState<boolean>(true);\n  const [user, selectUser] = useState<User | null>(null);\n\n  const { title, completed } = selectedTodo;\n\n  const loadData = useCallback(() => {\n    setIsloading(true);\n\n    getUser(userId)\n      .then(userFromServer => selectUser(userFromServer))\n      .finally(() => setIsloading(false));\n  }, []);\n\n  useEffect(() => {\n    if (userId !== null) {\n      loadData();\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setSelectedTodo(null);\n                setUserId(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","const emptyTextLabel = '';\n\ninterface Props {\n  loadData: () => void;\n  errorMessage: string;\n}\n\nexport const ErrorBlock: React.FC<Props> = ({ loadData, errorMessage }) => {\n  return (\n    <div className=\"notification is-danger\">\n      <button\n        type=\"button\"\n        className=\"delete\"\n        onClick={loadData}\n      >\n        {emptyTextLabel}\n      </button>\n      {errorMessage}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\n//  components\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\nimport { ErrorBlock } from './components/ErrorBlock';\n\n//  types\nimport { Todo } from './types/Todo';\nimport { FILTER } from './types/FILTER';\nimport { User } from './types/User';\n\n//  other\nimport { filterTodos } from './functions/filterTodos';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [userId, setUserId] = useState<User['id']>(0);\n\n  const [filterQuery, setFilterQuery] = useState<FILTER>(FILTER.ALL);\n  const [queryInput, setQueryInput] = useState<string>('');\n\n  const [isLoading, setIsloading] = useState<boolean>(true);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  const loadData = useCallback(() => {\n    setIsloading(true);\n    setErrorMessage('');\n\n    getTodos()\n      .then(todosJSON => setTodos(todosJSON))\n      .catch(error => setErrorMessage(error.message))\n      .finally(() => setIsloading(false));\n  }, []);\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    if (todos.length !== 0) {\n      setFilteredTodos(filterTodos(filterQuery, queryInput, todos));\n    }\n  }, [filterQuery, queryInput, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterQuery={filterQuery}\n                setFilterQuery={setFilterQuery}\n                queryInput={queryInput}\n                setQueryInput={setQueryInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {!isLoading && errorMessage.length === 0 && (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo as Todo}\n                  setSelectedTodo={setSelectedTodo}\n                  setUserId={setUserId}\n                />\n              )}\n              {!isLoading && errorMessage.length !== 0 && <ErrorBlock loadData={loadData} errorMessage={errorMessage} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n          userId={userId as User['id']}\n          setUserId={setUserId}\n        />\n      )}\n    </>\n  );\n};\n","import { FILTER } from '../types/FILTER';\nimport { Todo } from '../types/Todo';\n\nexport const filterTodos\n= (filterBy: FILTER, filterByQuery: string, innerTodos: Todo[]): Todo[] => {\n  const copyOfTodos: Todo[] = [...innerTodos];\n  let preparedTodos = [...copyOfTodos];\n\n  if (filterBy !== FILTER.ALL) {\n    preparedTodos = copyOfTodos.filter(todo => {\n      switch (filterBy) {\n        case FILTER.ACTIVE:\n          return todo.completed === false;\n        case FILTER.COMPLETED:\n          return todo.completed === true;\n        default:\n          return true;\n      }\n    });\n  }\n\n  const preparedTodosStage2 = preparedTodos.filter(todo => {\n    return todo.title.toLowerCase().includes(filterByQuery.toLowerCase());\n  });\n\n  return preparedTodosStage2 as Todo[];\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}